#-------------------------------------------------------------------------------
# driver_params
#-------------------------------------------------------------------------------
driver.burnin = 0
driver.epsilon = 0.02
driver.init_from = 'result'
driver.init_scatter = 0.2
driver.lbfgs_epsilon = {'f1h_cBs': 0.01, 'Nsat_mult': 0.01}
driver.lbfgs_options = {'gtol': 1e-05, 'ftol': 1e-10, 'xtol': 1e-10}
driver.lbfgs_use_priors = True
driver.solver_type = 'mcmc'
driver.start_from = '/global/project/projectdirs/m779/nhand/Research/RSDFit//fits//periodic/RunPB/pkmu/mcmc_gausscov_base_socorr_kmax04/2016-08-24_40x1500_chain0__1.npz'
driver.test_convergence = False
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# data params
#-------------------------------------------------------------------------------
data.columns = range(0, 5)
data.covariance = '$(RSDFIT_DATA)periodic/RunPB/covariance/pkmu_gaussian_mean_unscaled_dk005.dat'
data.covariance_Nmocks = 0
data.covariance_rescaling = 1.0
data.data_file = '$(RSDFIT_DATA)periodic/RunPB/pkmu/mean_unscaled_dk005.dat'
data.ells = None
data.fitting_range = [(0.02, 0.4), (0.02, 0.4), (0.02, 0.4), (0.02, 0.4), (0.02, 0.4)]
data.grid_file = '$(RSDFIT_DATA)periodic/RunPB/grid/mean_unscaled_dk005.dat'
data.mode = 'pkmu'
data.mu_bounds = [(0.0, 0.2), (0.2, 0.4), (0.4, 0.6), (0.6, 0.8), (0.8, 1.0)]
data.rescale_inverse_covariance = False
data.statistics = ['pkmu_0.1', 'pkmu_0.3', 'pkmu_0.5', 'pkmu_0.7', 'pkmu_0.9']
data.usedata = range(0, 5)
data.window_file = None
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# theory params
#-------------------------------------------------------------------------------
theory.F_AP = {'vary': False, 'expr': 'alpha_par/alpha_perp', 'value': 1.0, 'name': 'F_AP', 'analytic': False}
theory.N = {'fiducial': 0, 'min': 0, 'vary': False, 'analytic': False, 'upper': 500, 'value': 0, 'name': 'N', 'lower': 0, 'prior': 'uniform'}
theory.NcBs = {'fiducial': 45000.0, 'vary': False, 'expr': 'f1h_cBs / (fcB*(1 - fs)*nbar)', 'value': 29608.657627046545, 'name': 'NcBs', 'analytic': False}
theory.NsBsB = {'fiducial': 94500.0, 'vary': False, 'expr': 'f1h_sBsB / (fsB**2 * fs**2 * nbar) * (fcB*(1 - fs) - fs*(1-fsB))', 'value': 94583.2118641765, 'name': 'NsBsB', 'analytic': False}
theory.Nsat_mult = {'mu': 2.4, 'fiducial': 2.4, 'min': 2.0, 'vary': True, 'analytic': False, 'value': 2.4, 'name': 'Nsat_mult', 'sigma': 0.1, 'prior': 'normal'}
theory.alpha = {'vary': False, 'expr': '(alpha_perp**2 * alpha_par)**(1./3)', 'value': 1.0, 'name': 'alpha', 'analytic': False}
theory.alpha_par = {'fiducial': 1.0, 'vary': True, 'analytic': False, 'upper': 1.2, 'value': 1.0, 'name': 'alpha_par', 'lower': 0.8, 'prior': 'uniform'}
theory.alpha_perp = {'fiducial': 1.0, 'vary': True, 'analytic': False, 'upper': 1.2, 'value': 1.0, 'name': 'alpha_perp', 'lower': 0.8, 'prior': 'uniform'}
theory.b1 = {'vary': False, 'expr': '(1 - fs)*b1_c + fs*b1_s', 'value': 2.11905936, 'name': 'b1', 'analytic': False}
theory.b1_c = {'vary': False, 'expr': '(1 - fcB)*b1_cA + fcB*b1_cB', 'value': 1.99231625, 'name': 'b1_c', 'analytic': False}
theory.b1_cA = {'fiducial': 1.9, 'vary': True, 'analytic': False, 'upper': 2.5, 'value': 1.9, 'name': 'b1_cA', 'lower': 1.2, 'prior': 'uniform'}
theory.b1_cB = {'fiducial': 2.84, 'vary': False, 'expr': '(1-fsB**2)*b1_sA + fsB**2*b1_sB', 'value': 2.9374000000000002, 'name': 'b1_cB', 'analytic': False}
theory.b1_s = {'vary': False, 'expr': '(1 - fsB)*b1_sA + fsB*b1_sB', 'value': 3.2109999999999994, 'name': 'b1_s', 'analytic': False}
theory.b1_sA = {'fiducial': 2.63, 'vary': False, 'expr': 'gamma_b1sA*b1_cA', 'value': 2.755, 'name': 'b1_sA', 'analytic': False}
theory.b1_sB = {'fiducial': 3.62, 'vary': False, 'expr': 'gamma_b1sB*b1_cA', 'value': 3.8949999999999996, 'name': 'b1_sB', 'analytic': False}
theory.b1sigma8 = {'vary': False, 'expr': 'b1*sigma8_z', 'value': 1.2926262096, 'name': 'b1sigma8', 'analytic': False}
theory.delta_sigsA = {'mu': 1.0, 'fiducial': 1.0, 'min': 0.0, 'vary': False, 'analytic': False, 'value': 1.0, 'name': 'delta_sigsA', 'sigma': 0.2, 'prior': 'normal'}
theory.delta_sigsB = {'mu': 1.0, 'fiducial': 1.0, 'min': 0.0, 'vary': False, 'analytic': False, 'value': 1.0, 'name': 'delta_sigsB', 'sigma': 0.2, 'prior': 'normal'}
theory.epsilon = {'vary': False, 'expr': '(alpha_perp/alpha_par)**(-1./3) - 1.0', 'value': 0.0, 'name': 'epsilon', 'analytic': False}
theory.f = {'fiducial': 0.78, 'vary': True, 'analytic': False, 'upper': 1.0, 'value': 0.78, 'name': 'f', 'lower': 0.6, 'prior': 'uniform'}
theory.f1h_cBs = {'mu': 1.5, 'fiducial': 1.0, 'min': 0, 'vary': True, 'analytic': False, 'value': 1.0, 'name': 'f1h_cBs', 'sigma': 0.75, 'prior': 'normal'}
theory.f1h_sBsB = {'mu': 4.0, 'fiducial': 4.0, 'min': 0.0, 'vary': True, 'analytic': False, 'value': 4.0, 'name': 'f1h_sBsB', 'sigma': 1.0, 'prior': 'normal'}
theory.f_so = {'mu': 0.04, 'fiducial': 0.03, 'min': 0.0, 'vary': True, 'analytic': False, 'value': 0.03, 'name': 'f_so', 'sigma': 0.02, 'prior': 'normal'}
theory.fcB = {'max': 1, 'fiducial': 0.089, 'min': 0, 'vary': False, 'expr': 'fs / (1 - fs) * (1 + fsB*(1./Nsat_mult - 1))', 'value': 0.08898809523809524, 'name': 'fcB', 'analytic': False}
theory.fs = {'max': 1, 'fiducial': 0.104, 'min': 0.0, 'vary': True, 'analytic': False, 'upper': 0.25, 'value': 0.104, 'name': 'fs', 'lower': 0.0, 'prior': 'uniform'}
theory.fsB = {'max': 1, 'fiducial': 0.4, 'min': 0.0, 'vary': True, 'analytic': False, 'upper': 1.0, 'value': 0.4, 'name': 'fsB', 'lower': 0.0, 'prior': 'uniform'}
theory.fsigma8 = {'vary': False, 'expr': 'f*sigma8_z', 'value': 0.4758, 'name': 'fsigma8', 'analytic': False}
theory.gamma_b1cB = {'mu': 0.4, 'max': 1, 'fiducial': 0.4, 'min': 0.0, 'vary': False, 'analytic': False, 'value': 0.4, 'name': 'gamma_b1cB', 'sigma': 0.2, 'prior': 'normal'}
theory.gamma_b1sA = {'mu': 1.45, 'fiducial': 1.45, 'min': 1.0, 'vary': True, 'analytic': False, 'value': 1.45, 'name': 'gamma_b1sA', 'sigma': 0.3, 'prior': 'normal'}
theory.gamma_b1sB = {'mu': 2.05, 'fiducial': 2.05, 'min': 1.0, 'vary': True, 'analytic': False, 'value': 2.05, 'name': 'gamma_b1sB', 'sigma': 0.3, 'prior': 'normal'}
theory.nbar = {'value': 0.0004235857693396528, 'name': 'nbar', 'fiducial': 0.0004235857693396528, 'vary': False, 'analytic': False}
theory.sigma8_z = {'fiducial': 0.61, 'vary': True, 'analytic': False, 'upper': 0.9, 'value': 0.61, 'name': 'sigma8_z', 'lower': 0.3, 'prior': 'uniform'}
theory.sigma_c = {'fiducial': 1.0, 'vary': True, 'analytic': False, 'upper': 3.0, 'value': 1.0, 'name': 'sigma_c', 'lower': 0.0, 'prior': 'uniform'}
theory.sigma_s = {'fiducial': 4.0, 'vary': True, 'analytic': False, 'upper': 10.0, 'value': 4.0, 'name': 'sigma_s', 'lower': 2.0, 'prior': 'uniform'}
theory.sigma_sA = {'fiducial': 3.5, 'vary': False, 'expr': 'sigma_s * sigmav_from_bias(sigma8_z, b1_sA) / sigmav_from_bias(sigma8_z, b1_s)', 'value': 3.487785618114418, 'name': 'sigma_sA', 'analytic': False}
theory.sigma_sB = {'fiducial': 5, 'vary': False, 'expr': 'sigma_s * sigmav_from_bias(sigma8_z, b1_sB) / sigmav_from_bias(sigma8_z, b1_s)', 'value': 4.6908338803036767, 'name': 'sigma_sB', 'analytic': False}
theory.sigma_so = {'fiducial': 3.0, 'vary': True, 'analytic': False, 'upper': 7, 'value': 3.0, 'name': 'sigma_so', 'lower': 1.0, 'prior': 'uniform'}
#-------------------------------------------------------------------------------

theory_extra.f1h_cBs =  'fraction multiplying 1-halo term, NcBs'
theory_extra.b2_00__0 =  'A0 for generic b2_00'
theory_extra.nbar =  'the mean number density in (h/Mpc)^3'
theory_extra.gamma_b1cB =  'the relative fraction of b1_cB, varying linear between b1_sA and b1_s'
theory_extra.delta_sigsB =  'the relative fraction of sigma_sB to sigma_s'
theory_extra.f1h_sBsB =  'fraction multiplying 1-halo term, NsBsB'
theory_extra.b2_00__4 =  'A4 for generic b2_00'
theory_extra.delta_sigsA =  'the relative fraction of sigma_sA to sigma_s'
theory_extra.b2_00__2 =  'A2 for generic b2_00'
theory_extra.Nsat_mult =  'the mean number of satellites in halos with >1 sat'
theory_extra.gamma_b1sA =  'the relative fraction of b1_sA to b1_cA'
theory_extra.gamma_b1sB =  'the relative fraction of b1_sB to b1_cA'

#-------------------------------------------------------------------------------
# model params
#-------------------------------------------------------------------------------
model.Pdv_model_type = 'jennings'
model.correct_mu2 = False
model.correct_mu4 = False
model.cosmo_filename = 'runPB.ini'
model.enhance_wiggles = False
model.fog_model = 'modified_lorentzian'
model.include_2loop = False
model.interpolate = True
model.max_mu = 4
model.transfer_fit = 'CLASS'
model.use_P00_model = True
model.use_P01_model = True
model.use_P11_model = True
model.use_Pdv_model = True
model.use_Phm_model = True
model.use_mean_bias = False
model.use_so_correction = True
model.use_tidal_bias = False
model.vel_disp_from_sims = False
model.z = 0.55
#-------------------------------------------------------------------------------

